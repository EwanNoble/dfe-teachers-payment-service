{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "gitCommitHash": {
      "type": "string"
    },
    "secretsResourceGroupName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "appServiceDockerImage": {
      "type": "string"
    },
    "appServiceHostName": {
      "type": "string"
    },
    "useAppServiceHostName": {
      "type": "bool",
      "defaultValue": true
    },
    "appServiceCertificateSecretName": {
      "type": "string"
    },
    "appServiceAlwaysOn": {
      "type": "bool",
      "defaultValue": true
    },
    "vspAppServiceDockerImage": {
      "type": "string"
    },
    "verifyHubPossibleOutboundIpAddresses": {
      "type": "array"
    },
    "databaseName": {
      "type": "string"
    },
    "databaseUsername": {
      "type": "string"
    },
    "databasePassword": {
      "type": "securestring"
    },
    "alertEmailAddress": {
      "type": "string"
    },
    "RAILS_ENV": {
      "type": "string",
      "defaultValue": "production"
    },
    "RAILS_SERVE_STATIC_FILES": {
      "type": "string",
      "defaultValue": "true"
    },
    "SECRET_KEY_BASE": {
      "type": "securestring"
    },
    "BASIC_AUTH_USERNAME": {
      "type": "securestring"
    },
    "BASIC_AUTH_PASSWORD": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_ISSUER": {
      "type": "string"
    },
    "DFE_SIGN_IN_REDIRECT_BASE_URL": {
      "type": "string"
    },
    "DFE_SIGN_IN_IDENTIFIER": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_SECRET": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_CLIENT_ID": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_SECRET": {
      "type": "securestring"
    },
    "DFE_SIGN_IN_API_ENDPOINT": {
      "type": "string"
    },
    "NOTIFY_API_KEY": {
      "type": "securestring"
    },
    "NOTIFY_TEMPLATE_ID": {
      "type": "string"
    },
    "ROLLBAR_ACCESS_TOKEN": {
      "type": "securestring"
    },
    "ROLLBAR_ENV": {
      "type": "string"
    },
    "VSP.VERIFY_ENVIRONMENT": {
      "type": "string"
    },
    "VSP.SAML_SIGNING_KEY": {
      "type": "securestring"
    },
    "VSP.SAML_PRIMARY_ENCRYPTION_KEY": {
      "type": "securestring"
    }
  },
  "variables": {
    "batPlatformDeploymentUrlBase": "https://raw.githubusercontent.com/DFE-Digital/bat-platform-building-blocks/master/templates/",
    "deploymentUrlBase": "[concat('https://raw.githubusercontent.com/DFE-Digital/dfe-teachers-payment-service/', parameters('gitCommitHash'), '/azure/templates/')]",

    "applicationInsightsDeploymentName": "[concat(parameters('resourceNamePrefix'), '-application-insights')]",
    "appServiceCertificateDeploymentName": "[concat(parameters('resourceNamePrefix'), '-app-service-certificate')]",
    "appServicePlanDeploymentName": "[concat(parameters('resourceNamePrefix'), '-app-service-plan')]",
    "databaseServerFirewallRulesDeploymentName": "[concat(parameters('resourceNamePrefix'), '-database-server-firewall-rules')]",
    "databaseServerDeploymentName": "[concat(parameters('resourceNamePrefix'), '-database-server')]",
    "databaseDeploymentName": "[concat(parameters('resourceNamePrefix'), '-database')]",
    "storageAccountDeploymentName": "[concat(parameters('resourceNamePrefix'), '-storage-account')]",
    "vspDeploymentName": "[concat(parameters('resourceNamePrefix'), '-vsp')]",

    "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), 'storage'), '-', '')]",

    "databaseServerName": "[concat(parameters('resourceNamePrefix'), '-db')]",

    "applicationInsightsName": "[concat(parameters('resourceNamePrefix'), '-ai')]",

    "appServicePlanName": "[concat(parameters('resourceNamePrefix'), '-asp')]",

    "appServiceName": "[concat(parameters('resourceNamePrefix'), '-as')]",
    "appServiceRuntimeStack": "[concat('DOCKER|', parameters('appServiceDockerImage'))]",

    "vspAppServicePlanName": "[concat(parameters('resourceNamePrefix'), '-vsp-asp')]",
    "vspAppServiceName": "[concat(parameters('resourceNamePrefix'), '-vsp-as')]",
    "vspAppServiceRuntimeStack": "[concat('DOCKER|', parameters('vspAppServiceDockerImage'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('storageAccountDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('databaseServerDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', variables('storageAccountDeploymentName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'postgresql-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "postgresServerName": {
            "value": "[variables('databaseServerName')]"
          },
          "postgresAdminLogin": {
            "value": "[parameters('databaseUsername')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('databasePassword')]"
          },
          "securityAlertEmailAddress": {
            "value": "[parameters('alertEmailAddress')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('databaseDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', variables('databaseServerDeploymentName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'postgresql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[variables('databaseServerName')]"
          },
          "databaseName": {
            "value": "[parameters('databaseName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('applicationInsightsDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('appServicePlanDeploymentName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          }
        }
      }
    },
    {
      "condition": "[parameters('useAppServiceHostName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('appServiceCertificateDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', variables('appServicePlanDeploymentName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'), 'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('appServiceCertificateSecretName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('secretsResourceGroupName')]"
          },
          "serverFarmId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('appServiceName')]",
      "kind": "app,linux,container",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('appServicePlanDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('databaseDeploymentName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('databaseServerDeploymentName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": "[parameters('appServiceAlwaysOn')]",
          "httpLoggingEnabled": true,
          "linuxFxVersion": "[variables('appServiceRuntimeStack')]",
          "appSettings": [
            {
              "name": "RAILS_ENV",
              "value": "[parameters('RAILS_ENV')]"
            },
            {
              "name": "RAILS_SERVE_STATIC_FILES",
              "value": "[parameters('RAILS_SERVE_STATIC_FILES')]"
            },
            {
              "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_USERNAME",
              "value": "[concat(parameters('databaseUsername'), '@', variables('databaseServerName'))]"
            },
            {
              "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_PASSWORD",
              "value": "[parameters('databasePassword')]"
            },
            {
              "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_HOST",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('databaseServerDeploymentName'))).outputs.fullyQualifiedDomainName.value]"
            },
            {
              "name": "DFE_TEACHERS_PAYMENT_SERVICE_DATABASE_NAME",
              "value": "[parameters('databaseName')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('applicationInsightsDeploymentName'))).outputs.instrumentationKey.value]"
            },
            {
              "name": "SECRET_KEY_BASE",
              "value": "[parameters('SECRET_KEY_BASE')]"
            },
            {
              "name": "BASIC_AUTH_USERNAME",
              "value": "[parameters('BASIC_AUTH_USERNAME')]"
            },
            {
              "name": "BASIC_AUTH_PASSWORD",
              "value": "[parameters('BASIC_AUTH_PASSWORD')]"
            },
            {
              "name": "DFE_SIGN_IN_ISSUER",
              "value": "[parameters('DFE_SIGN_IN_ISSUER')]"
            },
            {
              "name": "DFE_SIGN_IN_REDIRECT_BASE_URL",
              "value": "[parameters('DFE_SIGN_IN_REDIRECT_BASE_URL')]"
            },
            {
              "name": "DFE_SIGN_IN_IDENTIFIER",
              "value": "[parameters('DFE_SIGN_IN_IDENTIFIER')]"
            },
            {
              "name": "DFE_SIGN_IN_SECRET",
              "value": "[parameters('DFE_SIGN_IN_SECRET')]"
            },
            {
              "name": "DFE_SIGN_IN_API_CLIENT_ID",
              "value": "[parameters('DFE_SIGN_IN_API_CLIENT_ID')]"
            },
            {
              "name": "DFE_SIGN_IN_API_SECRET",
              "value": "[parameters('DFE_SIGN_IN_API_SECRET')]"
            },
            {
              "name": "DFE_SIGN_IN_API_ENDPOINT",
              "value": "[parameters('DFE_SIGN_IN_API_ENDPOINT')]"
            },
            {
              "name": "NOTIFY_API_KEY",
              "value": "[parameters('NOTIFY_API_KEY')]"
            },
            {
              "name": "NOTIFY_TEMPLATE_ID",
              "value": "[parameters('NOTIFY_TEMPLATE_ID')]"
            },
            {
              "name": "ROLLBAR_ACCESS_TOKEN",
              "value": "[parameters('ROLLBAR_ACCESS_TOKEN')]"
            },
            {
              "name": "ROLLBAR_ENV",
              "value": "[parameters('ROLLBAR_ENV')]"
            },
            {
              "name": "GOVUK_VERIFY_VSP_HOST",
              "value": "[concat('https://', variables('vspAppServiceName'), '.azurewebsites.net')]"
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('useAppServiceHostName')]",
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('appServiceName'), '/', parameters('appServiceHostName'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('appServiceCertificateDeploymentName'))]",
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ],
      "properties": {
        "sslState": "SniEnabled",
        "thumbprint": "[reference(resourceId('Microsoft.Resources/deployments', variables('appServiceCertificateDeploymentName')), '2018-11-01').outputs.certificateThumbprint.value]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('databaseServerFirewallRulesDeploymentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('databaseServerDeploymentName'))]",
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('batPlatformDeploymentUrlBase'),'postgresql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "firewallRuleNamePrefix": {
            "value": "[concat(parameters('resourceNamePrefix'), '-')]"
          },
          "ipAddresses": {
            "value": "[split(reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).possibleOutboundIpAddresses, ',')]"
          },
          "serverName": {
            "value": "[variables('databaseServerName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('vspDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'vsp.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('vspAppServicePlanName')]"
          },
          "appServiceName": {
            "value": "[variables('vspAppServiceName')]"
          },
          "appServiceRuntimeStack": {
            "value": "[variables('vspAppServiceRuntimeStack')]"
          },
          "appServiceAlwaysOn": {
            "value": "[parameters('appServiceAlwaysOn')]"
          },
          "appServiceAllowedIpAddresses": {
            "value": "[union(split(reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).possibleOutboundIpAddresses, ','), parameters('verifyHubPossibleOutboundIpAddresses'))]"
          },
          "VERIFY_ENVIRONMENT": {
            "value": "[parameters('VSP.VERIFY_ENVIRONMENT')]"
          },
          "SERVICE_ENTITY_IDS": {
            "value": "[string(createArray(concat('https://', if(parameters('useAppServiceHostName'), parameters('appServiceHostName'), reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).defaultHostName))))]"
          },
          "SAML_SIGNING_KEY": {
            "value": "[parameters('VSP.SAML_SIGNING_KEY')]"
          },
          "SAML_PRIMARY_ENCRYPTION_KEY": {
            "value": "[parameters('VSP.SAML_PRIMARY_ENCRYPTION_KEY')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupId": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "databaseServerId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseServerName'))]"
    },
    "appServicePlanId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
    },
    "appServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
    },
    "vspAppServicePlanId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))).outputs.appServicePlanId.value]"
    },
    "vspAppServiceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('vspDeploymentName'))).outputs.appServiceId.value]"
    }
  }
}
