#!/bin/bash
set -e

if [ $# -lt 1 ]; then
  echo "Usage: $0 ENVIRONMENT_NAME"
  exit 1
fi

ENVIRONMENT_NAME=$1

case $ENVIRONMENT_NAME in
  "development")
    SUBSCRIPTION_ID="8655985a-2f87-44d7-a541-0be9a8c2779d"
    RESOURCE_GROUP_PREFIX="s118d01"
    DOCKER_IMAGE_TAG="development"
    ;;
  "test")
    SUBSCRIPTION_ID="e9299169-9666-4f15-9da9-5332680145af"
    RESOURCE_GROUP_PREFIX="s118t01"
    DOCKER_IMAGE_TAG="test"
    ;;
  "production")
    SUBSCRIPTION_ID="88bd392f-df19-458b-a100-22b4429060ed"
    RESOURCE_GROUP_PREFIX="s118p01"
    DOCKER_IMAGE_TAG="production"
    ;;
  *)
    echo "Could not find an known environment with the name: $ENVIRONMENT_NAME"
    exit 1
    ;;
esac

SECRETS_RESOURCE_GROUP_NAME="$RESOURCE_GROUP_PREFIX-secrets"
SECRETS_DEPLOYMENT_NAME=$SECRETS_RESOURCE_GROUP_NAME

APP_RESOURCE_GROUP_NAME="$RESOURCE_GROUP_PREFIX-app"
APP_DEPLOYMENT_NAME=$APP_RESOURCE_GROUP_NAME

LOGIN_TO_AZURE=1
CONFIRM_BEFORE_DEPLOY=1
DEPLOY_SECRETS=1

while [ "$2" ]; do
  case $2 in
    "--skip-login")
      LOGIN_TO_AZURE=
      ;;
    "--skip-confirmation")
      CONFIRM_BEFORE_DEPLOY=
      ;;
    "--skip-secrets")
      DEPLOY_SECRETS=
      ;;
    "--scratch-secrets")
      SECRETS_RESOURCE_GROUP_NAME="$SECRETS_RESOURCE_GROUP_NAME-tmp"
      SECRETS_DEPLOYMENT_NAME="$SECRETS_DEPLOYMENT_NAME-tmp"
      ;;
    "--scratch-app")
      APP_RESOURCE_GROUP_NAME="$APP_RESOURCE_GROUP_NAME-tmp"
      APP_DEPLOYMENT_NAME="$APP_DEPLOYMENT_NAME-tmp"      ;;
    *)
      echo "Unexpected argument: $2"
      exit 1
      ;;
  esac

  shift
done

SCRIPT_PATH=$( cd "$( dirname "$0" )" ; pwd -P )

RESOURCE_LOCATION="West Europe"

SECRETS_TEMPLATE_FILE_PATH="$SCRIPT_PATH/../azure/secrets/template.json"
SECRETS_PARAMETERS_TEMPLATE_FILE_PATH="$SCRIPT_PATH/../azure/secrets/parameters/$ENVIRONMENT_NAME.template.json"
SECRETS_PARAMETERS_FILE_PATH="$SCRIPT_PATH/../azure/secrets/parameters/$ENVIRONMENT_NAME.json"

APP_TEMPLATE_FILE_PATH="$SCRIPT_PATH/../azure/app/template.json"
APP_DOCKER_COMPOSE_FILE_PATH="$SCRIPT_PATH/../azure/app/files/docker-compose.yml"
APP_PARAMETERS_TEMPLATE_FILE_PATH="$SCRIPT_PATH/../azure/app/parameters/$ENVIRONMENT_NAME.template.json"
APP_PARAMETERS_FILE_PATH="$SCRIPT_PATH/../azure/app/parameters/$ENVIRONMENT_NAME.json"

KEYVAULT_NAME="$SECRETS_RESOURCE_GROUP_NAME-kv"

if [ $LOGIN_TO_AZURE ] && ! az account show > /dev/null; then
  echo "Logging in..."
  az login
fi

echo "Setting default subscription to $SUBSCRIPTION_ID..."
az account set --subscription "$SUBSCRIPTION_ID"

if [ $DEPLOY_SECRETS ]; then
  if ! az group show --name "$SECRETS_RESOURCE_GROUP_NAME" > /dev/null; then
    echo "Creating new resource group for secrets with name $SECRETS_RESOURCE_GROUP_NAME..."
    az group create \
      --name "$SECRETS_RESOURCE_GROUP_NAME" \
      --location "$RESOURCE_LOCATION" \
      > /dev/null
  else
    echo "Using existing secrets resource group with name $SECRETS_RESOURCE_GROUP_NAME..."
  fi

  echo "Rewriting secrets parameters file for $ENVIRONMENT_NAME..."
  sed \
    -e "s/\${keyVaultName}/$KEYVAULT_NAME/g" \
    "$SECRETS_PARAMETERS_TEMPLATE_FILE_PATH" > "$SECRETS_PARAMETERS_FILE_PATH"

  if [ $CONFIRM_BEFORE_DEPLOY ]; then
    echo
    echo "Are you ready to deploy $SECRETS_RESOURCE_GROUP_NAME?"
    echo "  Hit return to continue, or CTRL+C to stop."
    read -r
  fi

  echo "Starting secrets deployment..."
  az group deployment create \
    --name "$SECRETS_DEPLOYMENT_NAME" \
    --resource-group "$SECRETS_RESOURCE_GROUP_NAME" \
    --template-file "$SECRETS_TEMPLATE_FILE_PATH" \
    --parameters "@$SECRETS_PARAMETERS_FILE_PATH" \
    --mode Complete \
    --verbose

  echo
  echo "$SECRETS_RESOURCE_GROUP_NAME deployed!"
  echo
fi

if ! az group show --name "$APP_RESOURCE_GROUP_NAME" > /dev/null; then
  echo "Creating new resource group for app with name $APP_RESOURCE_GROUP_NAME..."
  az group create \
    --name "$APP_RESOURCE_GROUP_NAME" \
    --location "$RESOURCE_LOCATION" \
    > /dev/null
else
  echo "Using existing app resource group with name $APP_RESOURCE_GROUP_NAME..."
fi

echo "Rewriting app parameters file for $ENVIRONMENT_NAME..."
ruby \
    -ne "BEGIN { @body = File.open(\"$APP_DOCKER_COMPOSE_FILE_PATH\").read.gsub(\"\${dockerImageTag}\", \"$DOCKER_IMAGE_TAG\").gsub(\"\n\", \"\\\n\").gsub(\"\\\"\", \"\\\\\\\"\") } ; puts gsub(/\\\${dockerCompose}/, @body)" \
    < "$APP_PARAMETERS_TEMPLATE_FILE_PATH" \
  | sed \
    -e "s/\${subscriptionId}/$SUBSCRIPTION_ID/g" \
    -e "s/\${keyVaultResourceGroupName}/$SECRETS_RESOURCE_GROUP_NAME/g" \
    -e "s/\${keyVaultName}/$KEYVAULT_NAME/g" \
    > "$APP_PARAMETERS_FILE_PATH"

if [ $CONFIRM_BEFORE_DEPLOY ]; then
  echo
  echo "Are all the secrets up to date?"
  echo "Are you ready to deploy $APP_RESOURCE_GROUP_NAME?"
  echo "  Hit return to continue, or CTRL+C to stop."
  read -r
fi

echo "Starting app deployment..."
az group deployment create \
  --name "$APP_DEPLOYMENT_NAME" \
  --resource-group "$APP_RESOURCE_GROUP_NAME" \
  --template-file "$APP_TEMPLATE_FILE_PATH" \
  --parameters "@$APP_PARAMETERS_FILE_PATH" \
  --mode Complete \
  --verbose

echo
echo "$APP_RESOURCE_GROUP_NAME deployed!"
